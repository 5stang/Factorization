buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
// Try this some time: apply plugin: 'checkstyle'... well that might not work. But see Buildcraft.

version = new File('fzversion').getText('UTF-8').replaceAll("\\s","")
group = "factorization"
archivesBaseName = "Factorization"

minecraft {
    version = "1.7.2-10.12.1.1065" // FORGEMARK
    assetDir = "eclipse/assets"
    replace '@FZVERSION@', project.version
}

task writeFzFile {
    shouldRunAfter "build"
    doFirst {
        def outName = "build/libs/" + archivesBaseName + "-" + version + ".jar"
        print "\n\n   " + outName + "\n\n"
        def last_fz = new File("last_fz")
        last_fz.delete()
        last_fz << outName
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes("FMLCorePlugin": "factorization.coremod.LoadingPlugin",
                   "FMLCorePluginContainsFMLMod": "true")
    }
    exclude "codechicken/**"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.api.output
    classifier = 'dev'
}
