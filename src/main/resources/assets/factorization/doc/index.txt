\title{The Factorization Manual}
\nl\nl


\index{about}{About}
\index{ores}{Ores and Materials}
\index{lmp}{Logic Matrix Programmer}
\index{parts}{Parts and Machines}
\index{building}{Building}
\index{cookbook}{Designs}
\index{charge}{Charge Energy}
% \index{oreprocessing}{Ore Processing}
\index{misc}{Miscellaneous Nonsense}
\checkmods{none}{craftguide NotEnoughItems}{
\index{cgi/recipes}{Recipes}
\index{cgi/items}{Items}

%
% Dedicated recipe viewer mods do a much much better job.
% The output of this is pretty ugly, and there's no way to search for items.
% However, if you would like your machine's custom recipes (not IRecipes!) to be included
% as a backup way of looking at recipes,
% then send factorization an IMC message "AddRecipeCategory"
% with "Recipe Category Name|path.to.the.ClassHoldingTheRecipes|public_static_field",
% eg FMLInterModComms.sendMessage("factorization",
%                                 "AddRecipeCategory",
%                                 "Lacerator|factorization.oreprocessing.TileEntityGrinder|recipes");
% It will use reflection to explore the contents of the field.
% The field can be either an Iterable or a Map.
%
% Custom IRecipes will be included naturally as part of the exploration of Workbench recipes.
%

\nl
}{}


% \figure{
% H4sIAAAAAAAAAO3csQ3CQAwF0H+XCpKCDRiAHZgGCoqIhgKYnJILYoOcRMF7kuVfWW7cepsMKack
% dZNyzqKF2yeMKXOySwelxxAAAAAAAAAAAAAAAAAAAAD4Z0Pq9Z7UwxKeLbzGlMv3M0BtNa0Yvu+z
% I/ADU9bdPwAAAAAAAAAAAAAAAAAA0MnyEODR+jFv0UE2kUmAAAA=
% }

